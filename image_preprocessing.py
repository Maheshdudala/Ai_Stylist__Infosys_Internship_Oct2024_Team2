# -*- coding: utf-8 -*-
"""image_preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GgtMhA05Ti8oFlqwtyU5wjDv33cq83NP
"""

import requests
from PIL import Image
from io import BytesIO
import os

# Create a directory to store images
os.makedirs('images', exist_ok=True)

def download_image(url, filename):
    try:
        response = requests.get(url)
        img = Image.open(BytesIO(response.content))
        img.save(f'images/{filename}')
    except Exception as e:
        print(f"Error downloading {url}: {e}")


for index, row in df.head(10).iterrows():
    image_url = row['link']
    download_image(image_url, f"image_{index}.jpg")



def preprocess_image(image_path):
    img = Image.open(image_path)
    # Resize image
    img = img.resize((128, 128))
    # Convert to grayscale
    img = img.convert('L')
    # Save processed image
    img.save(image_path.replace("images", "processed_images"))

# Preprocess all downloaded images
os.makedirs('processed_images', exist_ok=True)
for filename in os.listdir('images'):
    preprocess_image(f'images/{filename}')